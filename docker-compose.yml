version: "3.9"
services:
  prometheus_container: 
   image: prom/prometheus
   container_name: prometheus
   ports:
     - 9090:9090
   volumes:
     - /home/user/Internship/Prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
     - /home/user/Internship/Prometheus/alerts.yml:/etc/prometheus/alerts.yml
   networks:
    custom_network: 
      ipv4_address: 192.30.0.4

  alertmanager_container:
   image: quay.io/prometheus/alertmanager
   container_name: alertmanager
   volumes:
     - /home/user/Internship/Prometheus/alertmanager.yml:/etc/alertmanager/alertmanager.yml
   networks:
    custom_network: 
      ipv4_address: 192.30.0.5
   command:
    - --config.file=/etc/alertmanager/alertmanager.yml
    - --cluster.listen-address=192.30.0.5:9094    
 
 
  node_exporter:
    image: quay.io/prometheus/node-exporter
    container_name: node_exporter
    pid: "host" # Использует PID namespace хоста, что позволяет контейнеру видеть все процессы хоста.
    volumes:
      - "/:/host:ro,rslave" #Монтирует корневую файловую систему хоста (/) в контейнер по пути /host в режиме только для чтения (ro), с опцией rslave, которая позволяет рекурсивное распространение изменений.
    networks:
      custom_network:
       ipv4_address: 192.30.0.6
    command:
      - --path.rootfs=/host #Передает флаг --path.rootfs в node-exporter, указывая путь к корневой файловой системе контейнера, которая была смонтирована ранее.
networks:
  custom_network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.30.0.0/16

